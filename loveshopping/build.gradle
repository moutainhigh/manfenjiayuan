apply plugin: 'com.android.application'

def releaseTime() {
    return new Date().format("MMdd", TimeZone.getTimeZone("UTC"))
}

android {
    useLibrary 'org.apache.http.legacy'

    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    signingConfigs {
        debug {
        }
        release {
        }
    }

    defaultConfig {
        applicationId "com.manfenjiayuan.loveshopping"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 1
        versionName "0.0.1"

        multiDexEnabled true

        manifestPlaceholders = [
                AMAP_API_KEY    : "46761c12f492d413c38e035eceefb23a", // 高德地图 api key
                UMENG_APP_KEY   : "56652e4467e58e75f5001144", // 友盟 app key
                GETUI_APP_ID    : "cEhivbdobh8o4ai7HEQCo9", // 个推 app id
                GETUI_APP_KEY   : "gIjGa6xaFu9t6r380q5RO6", // 个推 app key
                GETUI_APP_SECRET: "5FEagpOP0D7CU4qFP4ulP2", // 个推 app secret
                PACKAGE_NAME    : applicationId // apk 包名
        ]
    }
    buildTypes {
        debug {
//            buildConfigField "boolean", "LOG_DEBUG", "true"//是否输出LOG信息
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        release {
//            buildConfigField "boolean", "LOG_DEBUG", "false"//是否输出LOG信息
            minifyEnabled false
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    lintOptions {
        disable 'InvalidPackage'
        abortOnError false
    }
    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def fileName
                if (variant.buildType.name == "release") {
                    // 输出apk名称为mfh_cashier_v1.0.1_101915_wandoujia.apk
                    fileName = "mfh_loveshopping_${variant.productFlavors[0].name}_v${defaultConfig.versionName}_${releaseTime()}${defaultConfig.versionCode}.apk"
                } else {
                    fileName = "mfh_loveshopping_${variant.productFlavors[0].name}_v${defaultConfig.versionName}_${releaseTime()}_beta.apk"
                }

                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }
    productFlavors {
        bingshanguxue {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "bingshanguxue"]
        }
        mixicook {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "mixicook"]
        }
    }

    File propFile = file('signing.properties');
    if (propFile.exists()) {
        def Properties props = new Properties()
        props.load(new FileInputStream(propFile))
        if (props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
                props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
            android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
            android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
            android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
            android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
        } else {
            android.buildTypes.release.signingConfig = null
        }
    } else {
        android.buildTypes.release.signingConfig = null
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile project(':mfh-framework-all')
    compile project(':mfh-framework-android')
    compile project(':im')
    compile project(path: ':vector_uikit')
}
